name: ECS Deploy

on:
  workflow_call:
    inputs:
      aws-region:
        description: "The aws region to deploy to (default: us-east-1)"
        type: string
        default: us-east-1
      cluster:
        description: The ECS cluster to deploy to
        required: true
        type: string
      service:
        description: The ECS service to deploy to
        required: true
        type: string
      timeout:
        description: "The timeout in seconds for ecs-deploy (default: 300)"
        type: number
        default: 300
      max-definitions:
        description: "The maximum number of task definitions (default: 10)"
        type: number
        default: 10
      image:
        description: The name of the image to deploy, should already be built
        required: true
        type: string
      tags:
        description: A space separated list of tags for image to deploy to ECS, the last tag is the one that will be deployed
        type: string
      environment:
        description: The environment to deploy to, e.g. prod, stg, dev, test
        type: string
    secrets:
      aws-access-key-id:
        description: The AWS access key ID
        required: true
      aws-secret-access-key:
        description: The AWS secret access key
        required: true


jobs:
  deploy:
    name: ECS Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ inputs.aws-region }}

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push Images to AWS
        id: push-image
        env:
          IMAGE: ${{ inputs.image }}
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          TAGS: ${{ inputs.tags }}
          ENVIRONMENT: ${{ inputs.environment }}
        run: |
          if [ -n "$ENVIRONMENT" ]; then
              ENVIRONMENT="-$ENVIRONMENT"
          fi

          for TAG in $TAGS; do
              if [ -n "$TAG" ]; then
                  TAG=":$TAG"
              fi

              IMAGE_TO_DEPLOY="$REGISTRY/${IMAGE}${ENVIRONMENT}${TAG}"
              docker tag "$IMAGE" "$IMAGE_TO_DEPLOY"
              docker push "$IMAGE_TO_DEPLOY"
          done

          echo "image_to_deploy=$IMAGE_TO_DEPLOY" >> $GITHUB_OUTPUT

      - name: Install ecs-deploy
        run: |
          curl -o /usr/local/bin/ecs-deploy https://raw.githubusercontent.com/silinternational/ecs-deploy/master/ecs-deploy
          chmod +x /usr/local/bin/ecs-deploy

      - name: Deploy to ECS
        id: deploy-image
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.aws-access-key-id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.aws-secret-access-key }}
          AWS_REGION: ${{ inputs.aws-region }}
          AWS_DEFAULT_REGION: ${{ inputs.aws-region }}
          CLUSTER: ${{ inputs.cluster }}
          SERVICE: ${{ inputs.service }}
          TIMEOUT: ${{ inputs.timeout }}
          MAX_DEFINITIONS: ${{ inputs.max-definitions }}
          IMAGE: ${{ steps.push-image.outputs.image_to_deploy }}
        run: ecs-deploy --cluster $CLUSTER --service-name $SERVICE --image $IMAGE --timeout $TIMEOUT --max-definitions $MAX_DEFINITIONS
